
-- MySQL Script generated by MySQL Workbench
-- Tue Jun 24 13:51:15 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Cinemacousas
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Cinemacousas
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Cinemacousas` DEFAULT CHARACTER SET utf8 ;
USE `Cinemacousas` ;

-- -----------------------------------------------------
-- Table `account`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `account` ;

CREATE TABLE IF NOT EXISTS `account` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(100) NOT NULL,
  `password_hash` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `email_UNIQUE` ON `account` (`email` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `room`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `room` ;

CREATE TABLE IF NOT EXISTS `room` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `nb_rows` INT NOT NULL,
  `nb_columns` INT NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movie`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `movie` ;

CREATE TABLE IF NOT EXISTS `movie` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `duration` INT NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `seance`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `seance` ;

CREATE TABLE IF NOT EXISTS `seance` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `date` DATETIME NOT NULL,
  `starttime` TIME NOT NULL,
  `baseprice` INT NOT NULL,
  `room_id` INT NOT NULL,
  `movie_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_seance_room1`
    FOREIGN KEY (`room_id`)
    REFERENCES `room` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_seance_movie1`
    FOREIGN KEY (`movie_id`)
    REFERENCES `movie` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE INDEX `fk_seance_room1_idx` ON `seance` (`room_id` ASC) VISIBLE;

CREATE INDEX `fk_seance_movie1_idx` ON `seance` (`movie_id` ASC) VISIBLE;

CREATE INDEX `fk_seance_room1` ON `seance` (`room_id` ASC) VISIBLE;

CREATE INDEX `fk_seance_movie1` ON `seance` (`movie_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `booking`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `booking` ;

CREATE TABLE IF NOT EXISTS `booking` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `price` DECIMAL(10,2) NULL DEFAULT NULL,
  `account_id` INT NOT NULL,
  `seance_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_booking_account1`
    FOREIGN KEY (`account_id`)
    REFERENCES `account` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_booking_seance1`
    FOREIGN KEY (`seance_id`)
    REFERENCES `seance` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE INDEX `fk_booking_account1_idx` ON `booking` (`account_id` ASC) VISIBLE;

CREATE INDEX `fk_booking_seance1_idx` ON `booking` (`seance_id` ASC) VISIBLE;

CREATE INDEX `fk_booking_account1` ON `booking` (`account_id` ASC) VISIBLE;

CREATE INDEX `fk_booking_seance1` ON `booking` (`seance_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `customer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `customer` ;

CREATE TABLE IF NOT EXISTS `customer` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `firstname` VARCHAR(45) NOT NULL,
  `lastname` VARCHAR(100) NOT NULL,
  `age` INT NOT NULL,
  `pmr` TINYINT NULL DEFAULT NULL,
  `booking_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_customer_booking1`
    FOREIGN KEY (`booking_id`)
    REFERENCES `booking` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE INDEX `fk_customer_booking1_idx` ON `customer` (`booking_id` ASC) VISIBLE;

CREATE INDEX `fk_customer_booking1` ON `customer` (`booking_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `seat`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `seat` ;

CREATE TABLE IF NOT EXISTS `seat` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `type` ENUM('normal', 'pmr', 'stair', 'empty') NOT NULL DEFAULT 'normal',
  `room_id` INT NOT NULL,
  `seat_row` INT NOT NULL,
  `seat_column` INT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_seat_room1`
    FOREIGN KEY (`room_id`)
    REFERENCES `room` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE INDEX `fk_seat_room1_idx` ON `seat` (`room_id` ASC) VISIBLE;

CREATE UNIQUE INDEX `unique_seat_per_room` ON `seat` (`seat_row` ASC, `seat_column` ASC, `room_id` ASC) VISIBLE;

CREATE INDEX `fk_seat_room1` ON `seat` (`room_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `seatreservation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `seatreservation` ;

CREATE TABLE IF NOT EXISTS `seatreservation` (
  `customer_id` INT NOT NULL,
  `seance_id` INT NOT NULL,
  `seat_id` INT NOT NULL,
  PRIMARY KEY (`seance_id`, `seat_id`),
  CONSTRAINT `fk_seatreservation_customer1`
    FOREIGN KEY (`customer_id`)
    REFERENCES `customer` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_seatreservation_seance1`
    FOREIGN KEY (`seance_id`)
    REFERENCES `seance` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_seatreservation_seat1`
    FOREIGN KEY (`seat_id`)
    REFERENCES `seat` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE INDEX `fk_seatreservation_customer1_idx` ON `seatreservation` (`customer_id` ASC) VISIBLE;

CREATE INDEX `fk_seatreservation_seance1_idx` ON `seatreservation` (`seance_id` ASC) VISIBLE;

CREATE INDEX `fk_seatreservation_seat1_idx` ON `seatreservation` (`seat_id` ASC) VISIBLE;

CREATE INDEX `fk_seatreservation_customer1` ON `seatreservation` (`customer_id` ASC) VISIBLE;

CREATE INDEX `fk_seatreservation_seat1` ON `seatreservation` (`seat_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `ageprice`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ageprice` ;

CREATE TABLE IF NOT EXISTS `ageprice` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `agemax` INT NOT NULL,
  `agemin` INT NOT NULL,
  `factor` DECIMAL(4,2) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for testing
-- -----------------------------------------------------

-- Insert test rooms with rows and columns
INSERT INTO `room` (`name`, `nb_rows`, `nb_columns`) VALUES 
('Salle A', 8, 10),
('Salle B', 6, 12),
('Salle C', 10, 8);

-- Insert test movies
INSERT INTO `movie` (`title`, `description`, `duration`, `type`, `director`, `image`) VALUES 
('Avatar 2', 'Suite du célèbre film de science-fiction', 192, 'Science-Fiction', 'James Cameron', 'avatar2.jpg'),
('Spider-Man', 'Aventures du super-héros', 148, 'Action', 'Jon Watts', 'spiderman.jpg'),
('Le Roi Lion', 'Classique Disney animé', 118, 'Animation', 'Jon Favreau', 'roilion.jpg');

-- Insert test accounts
INSERT INTO `account` (`email`, `password_hash`) VALUES 
('admin@cinema.com', 'admin123'),
('user@test.com', 'user123');

-- Insert test seances
INSERT INTO `seance` (`date`, `time`, `type`, `baseprice`, `room_id`, `movie_id`) VALUES 
('2025-01-15', '14:00:00', 'Standard', 12.50, 1, 1),
('2025-01-15', '17:00:00', 'VIP', 15.00, 2, 2),
('2025-01-16', '20:00:00', 'Standard', 12.50, 3, 3);

-- Insert age pricing
INSERT INTO `ageprice` (`name`, `agemax`, `agemin`, `factor`) VALUES 
('Enfant', 12, 0, 0.7),
('Adulte', 64, 13, 1.0),
('Senior', 120, 65, 0.8);
